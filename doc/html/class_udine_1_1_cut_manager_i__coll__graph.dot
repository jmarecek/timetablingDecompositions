digraph G
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  Node1 [label="{Udine::CutManagerI\n|# active\l# totalCalls\l# totalCutsAdded\l# solver\l# config\l# cliquePool\l|+ CutManagerI()\l+ main()\l+ genCutsFromCliquePool()\l+ genCutsFromComponents()\l+ genCutsFromTriangles()\l+ genCutsFromTriangleNeighbourhood()\l+ genCutsFromPatterns()\l+ genCutsFromPatternsWithHeuristicAtSurface()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="config",arrowtail="open",fontname="FreeSans"];
  Node2 [label="{Udine::Config\n|+ path\l+ configId\l+ globalStart\l+ params\l+ upperBounds\l+ featureUse\l+ featureUseFrequency\l+ featureUseCount\l+ strategy\l+ anytimeDivingOnset\l+ contractTimelimit\l+ weights\l|+ Config()\l+ elapsed()\l+ getParam()\l+ getFrequency()\l+ getCount()\l+ getWeights()\l+ addSolutionCost()\l+ apply()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_udine_1_1_config.html"];
  Node3 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="params",arrowtail="open",fontname="FreeSans"];
  Node3 [label="{std::vector\< IloCplex::ParameterSet \>\n|- elements\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node4 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="weights",arrowtail="open",fontname="FreeSans"];
  Node4 [label="{std::vector\< ObjectiveWeights \>\n|- elements\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node5 -> Node4 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="elements",arrowtail="open",fontname="FreeSans"];
  Node5 [label="{Udine::ObjectiveWeights\n|+ wRoomCapacity\l+ wMinDays\l+ wCompactness\l+ wRoomStability\l|+ ObjectiveWeights()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_udine_1_1_objective_weights.html"];
  Node6 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="solver",arrowtail="open",fontname="FreeSans"];
  Node6 [label="{Udine::Model\n|# instance\l# env\l# model\l# vars\l# constraints\l# obj\l# conflictGraph\l# definition\l# config\l|+ Model()\l+ ~Model()\l# generateHardConstraints()\l# generateMinCourseDays()\l# generateCompactness()\l# generateRoomStability()\l# generateCoursePeriods()\l# generateNeighbourhood()\l# generateObjectiveComponents()\l# generateObjective()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_udine_1_1_model.html"];
  Node7 -> Node6 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="instance",arrowtail="open",fontname="FreeSans"];
  Node7 [label="{Udine::Instance\n|# periods\l# periodsPerDay\l# days\l# checks\l# courses\l# rooms\l# mRooms\l# origCurricula\l# curricula\l# restrict\l# patterns\l|+ Instance()\l+ load()\l+ getPeriodCount()\l+ getDayCount()\l+ getPeriodsPerDayCount()\l+ getCheckCount()\l+ getCourseCount()\l+ getProperCurriculumCount()\l+ getCurriculumCount()\l+ getRestrictionCount()\l+ getCourse()\l+ getCurriculum()\l+ getRestriction()\l+ getRoomCount()\l+ getRoomTotalMultiplicity()\l+ getRoomName()\l+ getRoomMultiplicity()\l+ getRoomPerEventCapacity()\l+ getPatterns()\l# genPatterns()\l# genMRoomsAggregates()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_udine_1_1_instance.html"];
  Node8 -> Node7 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="courses",arrowtail="open",fontname="FreeSans"];
  Node8 [label="{std::vector\< Course \>\n|- elements\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node9 -> Node8 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="elements",arrowtail="open",fontname="FreeSans"];
  Node9 [label="{Udine::Course\n|+ name\l+ teacher\l+ lectures\l+ minWorkingDays\l+ students\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_udine_1_1_course.html"];
  Node10 -> Node9 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="teacher\nname",arrowtail="open",fontname="FreeSans"];
  Node10 [label="{std::string\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node11 -> Node10 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="FreeSans"];
  Node11 [label="{std::basic_string\<char\>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node12 -> Node7 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="patterns",arrowtail="open",fontname="FreeSans"];
  Node12 [label="{std::vector\< Pattern \>\n|- elements\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node13 -> Node12 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="elements",arrowtail="open",fontname="FreeSans"];
  Node13 [label="{Udine::Pattern\n|+ coefs\l+ penalty\l+ rhs\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_udine_1_1_pattern.html"];
  Node14 -> Node13 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="coefs",arrowtail="open",fontname="FreeSans"];
  Node14 [label="{std::vector\< int \>\n|- elements\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node15 -> Node7 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="restrict",arrowtail="open",fontname="FreeSans"];
  Node15 [label="{std::vector\< Restriction \>\n|- elements\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node16 -> Node15 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="elements",arrowtail="open",fontname="FreeSans"];
  Node16 [label="{Udine::Restriction\n|+ courseId\l+ period\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_udine_1_1_restriction.html"];
  Node17 -> Node7 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="mRooms",arrowtail="open",fontname="FreeSans"];
  Node17 [label="{std::vector\< MRooms \>\n|- elements\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node18 -> Node17 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="elements",arrowtail="open",fontname="FreeSans"];
  Node18 [label="{std::vector\< T \>\n|- elements\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class."];
  Node19 -> Node18 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="elements",arrowtail="open",fontname="FreeSans"];
  Node19 [label="{T\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node20 -> Node7 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="curricula",arrowtail="open",fontname="FreeSans"];
  Node20 [label="{std::vector\< Curriculum \>\n|- elements\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node21 -> Node20 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="elements",arrowtail="open",fontname="FreeSans"];
  Node21 [label="{Udine::Curriculum\n|+ name\l+ courseIds\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_udine_1_1_curriculum.html"];
  Node10 -> Node21 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="name",arrowtail="open",fontname="FreeSans"];
  Node14 -> Node21 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="courseIds",arrowtail="open",fontname="FreeSans"];
  Node22 -> Node7 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="rooms",arrowtail="open",fontname="FreeSans"];
  Node22 [label="{std::vector\< Room \>\n|- elements\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node23 -> Node22 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="elements",arrowtail="open",fontname="FreeSans"];
  Node23 [label="{Udine::Room\n|+ name\l+ capacity\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_udine_1_1_room.html"];
  Node10 -> Node23 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="name",arrowtail="open",fontname="FreeSans"];
  Node24 -> Node6 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="conflictGraph",arrowtail="open",fontname="FreeSans"];
  Node24 [label="{Udine::Graph\n|+ vs\l+ es\l+ cliques\l|+ generateConflictGraph()\l+ generateCliques()\l+ ~Graph()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_udine_1_1_graph.html"];
  Node25 -> Node24 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="cliques",arrowtail="open",fontname="FreeSans"];
  Node25 [label="{std::vector\< std::vector\< int \> \>\n|- elements\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node26 -> Node24 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="es",arrowtail="open",fontname="FreeSans"];
  Node26 [label="{std::vector\< Edge \>\n|- elements\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node27 -> Node24 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="vs",arrowtail="open",fontname="FreeSans"];
  Node27 [label="{std::vector\< Vertex \>\n|- elements\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node28 -> Node27 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="elements",arrowtail="open",fontname="FreeSans"];
  Node28 [label="{Udine::Vertex\n|+ adj\l+ c\l|+ Vertex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_udine_1_1_vertex.html"];
  Node29 -> Node28 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="adj",arrowtail="open",fontname="FreeSans"];
  Node29 [label="{std::set\< int \>\n|- keys\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node30 -> Node6 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="definition",arrowtail="open",fontname="FreeSans"];
  Node30 [label="{Udine::Neighbourhood\n|+ type\l+ fixPeriod\l+ fixDay\l+ preprocessAway\l+ cost\l+ lowerBound\l+ penaltyMinCourseDays\l+ penaltyCompactness\l|+ Neighbourhood()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_udine_1_1_neighbourhood.html"];
  Node31 -> Node30 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="fixDay",arrowtail="open",fontname="FreeSans"];
  Node31 [label="{std::vector\< CourseDayNumberTriple \>\n|- elements\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node32 -> Node31 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="elements",arrowtail="open",fontname="FreeSans"];
  Node32 [label="{Udine::CourseDayNumberTriple\n|+ course\l+ day\l+ events\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_udine_1_1_course_day_number_triple.html"];
  Node33 -> Node30 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="fixPeriod\npreprocessAway",arrowtail="open",fontname="FreeSans"];
  Node33 [label="{std::vector\< CoursePeriodPair \>\n|- elements\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node34 -> Node33 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="elements",arrowtail="open",fontname="FreeSans"];
  Node34 [label="{Udine::CoursePeriodPair\n|+ course\l+ period\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_udine_1_1_course_period_pair.html"];
  Node35 -> Node6 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="vars",arrowtail="open",fontname="FreeSans"];
  Node35 [label="{Udine::Variables\n|+ x\l+ courseMinDayViolations\l+ courseRooms\l+ coursePeriods\l+ courseDays\l+ singletonChecks\l+ penaltyRoomStability\l+ penaltyRoomCapacity\l+ penaltyPeriodSingletons\l+ penaltyPeriodSpread\l|+ Variables()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_udine_1_1_variables.html"];
  Node2 -> Node6 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="config",arrowtail="open",fontname="FreeSans"];
  Node36 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="cliquePool",arrowtail="open",fontname="FreeSans"];
  Node36 [label="{std::map\< CliqueCutIdentifier, bool \>\n|- keys\l- elements\l|}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
}
